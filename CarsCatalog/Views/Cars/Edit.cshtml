@model CarsCatalog.Models.Car

@{
    ViewBag.Title = "Edit car";
}

@using (Html.BeginForm("Edit", "Cars", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Edit car</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)



        <div class="form-group">
            @Html.LabelFor(model => model.Model.BrandId, "Brand", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="BrandId" name="BrandId">
                    @foreach (var brand in ViewBag.BrandTree)
                    {
                        <option value="@brand.Id" @(brand.Id == @ViewBag.CarModel.BrandId ? "selected" : "")>@brand.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Model.BrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelId, "Model", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="ModelId" name="ModelId"></select>
                @Html.ValidationMessageFor(model => model.ModelId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <script type="text/javascript">
            var brand_model_Tree = @Html.Raw(Json.Encode(ViewBag.BrandTree));
            var modelDownList = function() {
                var selectedContent = "";
                var brandId = $("#BrandId").val();

                var models = brand_model_Tree[brandId-1].List;

                for (var i = 0; i < models.length; i++) {
                    if(models[i].Id == @(ViewBag.CarModel.Id) )
                        selectedContent += "<option value='"+models[i].Id+"' selected >" + models[i].Name + "</option>";
                    else
                        selectedContent += "<option value='"+models[i].Id+"' >" + models[i].Name + "</option>";
                }
                $("#ModelId")[0].innerHTML = selectedContent;
            }
            modelDownList();

            $("#BrandId").change(function () {
                modelDownList();
            });
        </script>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EngineCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EngineCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EngineCapacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Image</label>
            <div class="col-md-10">
                @if (Model.ImageData == null)
                {
                    @:None
                }
                else
                {
                    <img width="200" height="200" src="@Url.Action("GetImage", "Cars", new {Model.Id})" />
                }
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Upload new image:</label>
            <div class="col-md-10">
                <input type="file" name="Image" class="form-control" accept="image/*" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
